{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ankit Mishra\\\\Django\\\\YouTube-DataFetcher\\\\frontend\\\\src\\\\pages\\\\ProductsListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fetchYouTubeData, exportExcelFile } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchDataForm = () => {\n  _s();\n  const [channelUrl, setChannelUrl] = useState('');\n  const handleFetch = async () => {\n    try {\n      await fetchYouTubeData(channelUrl);\n      alert('Data fetched successfully!');\n    } catch (err) {\n      alert('Error fetching data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter YouTube Channel URL\",\n      value: channelUrl,\n      onChange: e => setChannelUrl(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetch,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(FetchDataForm, \"ihjMpknIgeSAQZc04kAjY5rcb+s=\");\n_c = FetchDataForm;\nexport default FetchDataForm;\nvar _c;\n$RefreshReg$(_c, \"FetchDataForm\");","map":{"version":3,"names":["React","useState","fetchYouTubeData","exportExcelFile","jsxDEV","_jsxDEV","FetchDataForm","_s","channelUrl","setChannelUrl","handleFetch","alert","err","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Ankit Mishra/Django/YouTube-DataFetcher/frontend/src/pages/ProductsListPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { fetchYouTubeData, exportExcelFile } from '..';\r\n\r\nconst FetchDataForm = () => {\r\n  const [channelUrl, setChannelUrl] = useState('');\r\n  const handleFetch = async () => {\r\n    try {\r\n      await fetchYouTubeData(channelUrl);\r\n      alert('Data fetched successfully!');\r\n    } catch (err) {\r\n      alert('Error fetching data.');\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter YouTube Channel URL\"\r\n        value={channelUrl}\r\n        onChange={(e) => setChannelUrl(e.target.value)}\r\n      />\r\n      <button onClick={handleFetch}>Fetch Data</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchDataForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMR,gBAAgB,CAACM,UAAU,CAAC;MAClCG,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZD,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EACD,oBACEN,OAAA;IAAAQ,QAAA,gBACER,OAAA;MACES,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,2BAA2B;MACvCC,KAAK,EAAER,UAAW;MAClBS,QAAQ,EAAGC,CAAC,IAAKT,aAAa,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFlB,OAAA;MAAQmB,OAAO,EAAEd,WAAY;MAAAG,QAAA,EAAC;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAChB,EAAA,CArBID,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAuBnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}